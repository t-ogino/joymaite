# -*- encoding: utf-8 -*-
module SpecTest30
  module_function
  #------------------------------------------------------------------------------------------------
  # === メソッド概要
  # 読み込んだＣＳＶを編集して出力します。
  # === 引数
  #  なし
  # === 戻り値
  #  編集済ＣＳＶ
  #------------------------------------------------------------------------------------------------
  def make_edit_csv
    begin
      # 出力ファイルオープン
      file_path   = "spec/lib/out.csv"
      out_file = File.open(file_path, 'w+b')
  
      # CSV読み込み
      in_file_path = "spec/lib/test.csv"
      File::open(in_file_path, "rb") do |f|
        f.each do |rec|
            csv_rec = CsvFile.new(rec)      # CSVレコード定義
            p "--------------------------------------------------"
            p csv_rec.name
            p csv_rec.sex
            p csv_rec.birth
  
            # 出力レコード初期化
            rec = ""
            # 編集処理（氏名）全角SPACE削除
            rec += get_edit_name(csv_rec.name) + ","
            # 編集処理（性別）
            rec += get_sex_name(csv_rec.sex) + ","
            # 編集処理（生年月日）
            rec += get_edit_birth(csv_rec.birth)
            # 出力
            out_file.print(rec + "\r\n")
        end
      end
  
      # 出力ファイルクローズ
      out_file.close
  
      return true

    # エラー処理
    rescue => e
       p e.message
       return false
    end
  end
  #------------------------------------------------------------------------------------------------
  # === メソッド概要
  # 名前から全角ＳＰＡＣＥを削除しを返却します
  # === 引数
  #  name:  名前
  # === 戻り値
  #  編集後名前
  #------------------------------------------------------------------------------------------------
  def get_edit_name(name)
    name.gsub(/(\s|　)+/, '')
  end
  #------------------------------------------------------------------------------------------------
  # === メソッド概要
  # 性別コードに対応する名称を返却します
  # === 引数
  #  sex:  性別コード(1:男 2:女)
  # === 戻り値
  #  性別名称
  #------------------------------------------------------------------------------------------------
  def get_sex_name(sex)
    case sex
    when 1 , "1"
      "男"
    when 2 , "2"
      "女"
    else
      "不明"
    end
  end
  #------------------------------------------------------------------------------------------------
  # === メソッド概要
  # 生年月日をXXXX年XX月XX日生まれに編集して返却します
  # ただし、該当日付が存在しない場合には、不明で返却します
  # === 引数
  #  birth:  生年月日
  # === 戻り値
  #  編集後生年月日
  #------------------------------------------------------------------------------------------------
  def get_edit_birth(birth)
    if birth.size != 8
      return "不明"
    end
    begin
      date = Date.new(birth[0,4].to_i, birth[4,2].to_i, birth[6,2].to_i )
    rescue
      return "不明"
    end
    return date.strftime("%Y年%m月%d日生まれ")
  end
end
